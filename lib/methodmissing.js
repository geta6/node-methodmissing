// Generated by CoffeeScript 1.6.3
var Proxy,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Proxy = require('node-proxy');

module.exports = function(obj, callback) {
  var handlers, property;
  if (callback == null) {
    callback = function() {};
  }
  if (typeof obj === 'string') {
    obj = require(obj);
  }
  property = obj || {};
  handlers = {
    get: function(rec, key) {
      return function() {
        if (__indexOf.call(property, key) >= 0) {
          if (Object.prototype.toString.call(property[key]) === '[object Function]') {
            return property[key].apply(null, arguments);
          }
          return property[key];
        } else {
          return callback(key, arguments);
        }
      };
    },
    set: function(rec, key, val) {
      return property[key] = val;
    }
  };
  return Proxy.createFunction(handlers, function() {
    return property.apply(this, arguments);
  });
};
